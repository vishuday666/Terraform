provider "azurerm" {
 features { }
}

# refer to a resource group
data "azurerm_resource_group" "test" {
  name = "${var.resource_group_name}"
}

data "azurerm_backup_policy_vm" "bkup" {
  name                = "${var.backup_policy_name}"
  recovery_vault_name = "${var.recovery_services_vault_name}"
  resource_group_name = "${var.core_resource_group_name}"
}

#refer to a subnet
data "azurerm_subnet" "subnet1" {
  name                 = "${var.subnet_name}"
  virtual_network_name = "${var.vnet_name}"
  resource_group_name  = "${var.nw_resource_group_name}"
}
#refer to a storage_account
data "azurerm_storage_account" "sa" {
  name                 = "${var.storage_account_name}"
  resource_group_name  = "${var.st_resource_group_name}"
}

# Create public IPs
resource "azurerm_public_ip" "test" {
    name                         = "${var.vmname}.pip"
    location                     = "${data.azurerm_resource_group.test.location}"
    resource_group_name          = "${data.azurerm_resource_group.test.name}"
    allocation_method   = "Dynamic"

}
# refer to Network Security Group
data "azurerm_network_security_group" "test" {
  name                = "${var.nsg_name}"
  resource_group_name = "${var.nw_resource_group_name}"
}
# create a network interface
resource "azurerm_network_interface" "test" {
  name                = "${var.vmname}.nic"
  location            = "${data.azurerm_resource_group.test.location}"
  resource_group_name = "${data.azurerm_resource_group.test.name}"

  ip_configuration {
    name                          = "testconfiguration1"
    subnet_id                     = "${data.azurerm_subnet.subnet1.id}"
    private_ip_address_allocation = "static"
    private_ip_address         = "${var.ipaddress}"
  }
}

# Connect the security group to the network interface
resource "azurerm_network_interface_security_group_association" "example" {
    network_interface_id      = "${azurerm_network_interface.test.id}"
    network_security_group_id = "${data.azurerm_network_security_group.test.id}"
}

resource "azurerm_availability_set" "test" {
  name                = "${var.vmname}.aset"
  location            = "${data.azurerm_resource_group.test.location}"
  resource_group_name = "${data.azurerm_resource_group.test.name}"

  tags = {
    environment = "Production"
  }
}

# Create virtual machine
resource "azurerm_virtual_machine" "test" {
    name                  = "${var.vmname}"
    location              = "${azurerm_network_interface.test.location}"
    resource_group_name   = "${data.azurerm_resource_group.test.name}"
    network_interface_ids = ["${azurerm_network_interface.test.id}"]
    vm_size               = "${var.vm_size}"
    availability_set_id   = "${var.vmname}.aset" != "" ? "${azurerm_availability_set.test.id}" : ""

# Uncomment this line to delete the OS disk automatically when deleting the VM
delete_os_disk_on_termination = true

# Uncomment this line to delete the data disks automatically when deleting the VM
delete_data_disks_on_termination = true

  storage_image_reference {
    publisher = "${var.os.publisher}"
    offer     = "${var.os.offer}"
    sku       = "${var.os.sku}"
    version   = "${var.os.version}"
  }
   storage_os_disk {
    name              = "${var.vmname}.osdisk"
    caching           = "ReadWrite"
    create_option     = "FromImage"
    managed_disk_type = "${var.os1.disk_type}"
  }
  storage_data_disk {
    name              = "${var.vmname}.disk1"
    caching           = "None"
    create_option     = "Empty"
    disk_size_gb      =  "${var.data.disk_size}"
    lun               =  0
    managed_disk_type = "${var.data.disk_type}"
  }
   os_profile {
    computer_name  = "${var.vmname}"
    admin_username = "${var.admin_username}"
    admin_password = "${var.admin_password}"
  }
   os_profile_linux_config {
    disable_password_authentication = false
  }
boot_diagnostics {
    enabled = true
    storage_uri = "${data.azurerm_storage_account.sa.primary_blob_endpoint}"

  }

}

resource "azurerm_backup_protected_vm" "test" {
  resource_group_name = "${var.core_resource_group_name}"
  recovery_vault_name = "${var.recovery_services_vault_name}"
  source_vm_id        = "${azurerm_virtual_machine.test.id}"
  backup_policy_id    = "${data.azurerm_backup_policy_vm.bkup.id}"
}